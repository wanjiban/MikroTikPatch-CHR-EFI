name: build GPT ARM64

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 4"  # 每周四午夜触发

jobs:
  check:
    name: Check Release Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest ARM64 release version
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            // 获取所有 release，并筛选 tag_name 包含 "arm64" 的最新版本
            const releases = await github.rest.repos.listReleases({
              owner: "elseif",
              repo: "MikroTikPatch"
            });
            const latestArm64 = releases.data.find(release => release.tag_name.includes("arm64"));
            if (!latestArm64) {
              core.setFailed("No ARM64 release found");
            }
            let buildNeeded = "true";
            // 尝试获取仓库中的 latest_version.txt
            try {
              const { data: contentData } = await github.rest.repos.getContent({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: "latest_version.txt"
              });
              const currentVersion = Buffer.from(contentData.content, 'base64').toString().trim();
              if (currentVersion === latestArm64.tag_name) {
                core.info("Version unchanged, skipping build.");
                buildNeeded = "false";
              }
            } catch (error) {
              core.info("latest_version.txt not found, proceeding with build.");
            }
            core.info(`Latest ARM64 release: ${latestArm64.tag_name}`);
            core.setOutput("version", latestArm64.tag_name);
            core.setOutput("build_needed", buildNeeded);

  build:
    name: Build CHR ARM64 GPT
    needs: check
    if: needs.check.outputs.build_needed == 'true'
    runs-on: ubuntu-latest
    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: Asia/Shanghai
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache apt list
